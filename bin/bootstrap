#!/usr/bin/env python3

import argparse
import pathlib as pl


parser = argparse.ArgumentParser()
parser.add_argument('-C', '--root', default='.')
parser.add_argument('entrypoint')
args = parser.parse_args()


roots_dir = pl.Path(__file__).absolute().parent.parent

app_root = pl.Path(args.root).absolute()
instance_dir = app_root / 'var'
conf_dir = instance_dir / 'etc'

env_path = conf_dir / 'bootstrap.sh'

env = f'''
# Auto generated by Flask-Roots' bootstrap.
# Do not modify.
export FLASK_APP="{args.entrypoint}"
export FLASK_ROOT_PATH="{app_root}"
export FLASK_INSTANCE_PATH="{instance_dir}"
export FLASK_ROOTS_DIR="{roots_dir}"

'''

if not env_path.exists():
    env_path.parent.mkdir(exist_ok=True, parents=True)
with open(env_path, 'w') as fh:
    fh.write(env)

shim = '''
# Auto generated by Flask-Roots' bootstrap.
# Do not modify.

here="$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)"
source "$here/../var/etc/bootstrap.sh"

if [[ ! "$FLASK_ROOTS_DIR" ]]; then
    echo "FLASK_ROOTS_DIR not set; aborting"
    return
fi

source "$FLASK_ROOTS_DIR/bin/activate"

'''

shim_path = app_root / 'bin' / 'activate'
if not shim_path.exists():
    shim_path.parent.mkdir(exist_ok=True)
with open(shim_path, 'w') as fh:
    fh.write(shim)
